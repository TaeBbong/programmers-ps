# 도넛과 막대 그래프

문제 정보 : lv2, 그래프 개념

나는 개 삽질 하면서 그룹 만들고, 어쩌구 저쩌구 하면서 구현했는데,
(그래도 이때 막대 : 나가는 간선 수가 0인 노드가 있다 / 8자 : 나가는 간선 수가 2인 노드가 있다 / 도넛 : 그 외 나머지  라는 개념은 찾음)
(근데 이걸 노드 단위로 볼 생각을 못하고 그룹을 만들어서 계산해야겠다고 생각했었음...)

차분히 생각해보면

센터 : 나가는 간선 2개 이상, 들어오는 간선 0인 노드

막대 그래프 수 : 나가는 간선 수가 0인 노드의 수
8자 그래프 수 : 나가는 간선 수가 2인 노드의 수
도넛 그래프 수 : 센터에서 나가는 간선 수 - 막대 - 8자

결국 이러면 각 노드별로 나가는 간선 수, 들어오는 간선 수를 계산한 다음에,
모든 노드마다 나가는 간선수 > 2, 들어오는 간선 수 == 0 인 노드를 center로 찾고
막대, 8자, 도넛 순서대로 찾으면 됨...

이렇게 쉽게 접근 가능한 것을..

```python
from collections import defaultdict


def solution(edges):
    indeg  = defaultdict(int)
    outdeg = defaultdict(int)

    # 1. 각 노드의 in-degree, out-degree 계산
    for s, e in edges:
        outdeg[s] += 1
        indeg[e]  += 1
        # 존재만 보장
        indeg.setdefault(s, 0)
        outdeg.setdefault(e, 0)

    # 2. 생성한 정점(센터) 찾기 : in = 0 & out >= 2
    center = next(v for v in outdeg if indeg[v] == 0 and outdeg[v] >= 2)

    # 3. 막대·8자 카운트 (센터는 제외)
    stick = sum(1 for v in outdeg if v != center and outdeg[v] == 0)
    eight = sum(1 for v in outdeg if v != center and outdeg[v] == 2)

    # 4. 도넛 개수 = 센터 out-degree − 막대 − 8자
    donut = outdeg[center] - stick - eight

    return [center, donut, stick, eight]
```