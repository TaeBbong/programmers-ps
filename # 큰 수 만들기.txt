# 큰 수 만들기

문제정보 : dp? 아이디어?/lv2

원래는 나름의 요상한 알고리즘을 짜서,
앞에서부터 k개만큼 보면서 k + 1번째 값보다 작은 애들을 pop,
pop한 만큼 k를 감소시키고 다시 그 뒤에서부터 반복
이런식으로 해결하려 했는데,
7 2 0 3 7 8, 2
이런 예제에서 2가 지워져야 하는데 0 때문에 문제가 발생
즉 k + 1번째를 기준으로 하는데 이 값이 0처럼 제일 작은 값일 경우,
~k 부분에서 삭제가 발생하지 못함...
그래서 때려치고 힌트를 좀 봐서 스택을 통해 해결함
스택을 통해 새로운 값이 들어왔을 때, 이 값이 앞에 있는 애들보다 크면 앞에 있는 애들을 pop
이렇게 돌려서 결국 n * len(stack)만큼 처리했음
사실 이 방법은 n^2에 가까운 방법이라고 생각이 드는데,
일일이 시뮬레이션 돌려보면서 계산해보면, n에 가까운 방법이 맞는 것 같다..

def solution(numbers, k):
    stack = []
    for i in numbers:
        while len(stack) and int(stack[-1]) < int(i) and k > 0:
            stack.pop()
            k -= 1
        stack.append(i)
    if k > 0:
        return ''.join(stack[:-k])
    return ''.join(stack)
