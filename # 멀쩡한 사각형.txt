# 멀쩡한 사각형

문제 정보 : lv2, 수학

대각선의 기울기에 따라 대각선을 만나는 사각형 갯수를 전체 사각형에서 빼야함
내 최초 풀이는 기울기를 올림해서 매 칸마다 해당 기울기 올림한 값만큼 빠진다는 계산으로 진행했는데,
(0, 0), (1, 1,333333) => 올림(1.3333) - 내림(0) = 2칸
(1, 1.333333), (2, 2.6666666) => 올림(2.66666666) - 내림(1.333333333) = 2칸
대충 이런 느낌??

```python
import math


def solution(w,h):
    w, h = max(w,h), min(w, h)
    g = math.gcd(w,h)
    ww = w // g
    hh = h // g
    gradient = ww / hh
    
    cut = 0
    for i in range(1, hh):
        s = (i - 1) * gradient
        e = (i) * gradient
        cut += (math.ceil(e) - math.floor(s))
    cut += (ww - math.floor((hh - 1) * gradient))
    ans = w * h - cut * g
    
    return ans
```

이것도 맞음!!!!!
대신 마지막에 딱 정수가 되는 지점(ww, hh)는 부동소수점 문제로 따로 처리해야 함

다른 방식으로 접근해보면,
(정수, 정수) => (정수, 정수) 구간을 생각했을 때
대각선이 지나가는 개수 = w * h - (w - 1) * (h - 1) = w + h - 1 이라는 수식을 얻을 수 있음
왜 그럴까..?

솔직히 잘 모르겠음.. 수학적인 부분임.. 증명 어캐하지?

gpt가 제시한 증명은 
세로 방향 격자선은 w - 1만큼 대각선과 교차함 => w - 1칸 만큼 대각선이 지나간단 얘기
가로 방향 격자선은 h - 1만큼 대각선과 교차함 => h - 1칸 만큼 대각선이 지나간단 얘기
시작점까지 고려하면,
w - 1 + h - 1 + 1 => w + h - 1

```python
from math import gcd


def solution(w,h):
    w, h = max(w,h), min(w, h)
    g = gcd(w,h)

    ww = w // g
    hh = h // g
    cut = ( (ww * hh) - (ww - 1) * (hh - 1) )

    answer = w * h - cut * g
    return answer
```