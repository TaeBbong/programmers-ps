# 혼자 두는 틱택토

문제 정보 : lv2, 구현

생각보다 조건이 다양하고 고려할게 많더라..

```python
def check_toes(boards):
    lines = []
    SIZE = len(boards)
    o, x = 0, 0
    
    lines.extend(boards)
    
    for col in range(SIZE):
        column = ''.join(boards[row][col] for row in range(SIZE))
        lines.append(column)
        
    diag1 = ''.join(boards[i][i] for i in range(SIZE))
    lines.append(diag1)
    
    diag2 = ''.join(boards[i][SIZE - 1 - i] for i in range(SIZE))
    lines.append(diag2)

    for line in lines:
        if line == 'O' * len(boards):
            o += 1
        if line == 'X' * len(boards):
            x += 1
    
    return o, x


def solution(boards):
    o = 0
    x = 0
    
    for board in boards:
        o += board.count('O')
        x += board.count('X')
    
    # 후공이 더 많이 놓은 경우
    if o < x:
        return 0
    
    # 선공이 두번 더 놓은 경우
    if o - x > 1:
        return 0
    
    toes_o, toes_x = check_toes(boards)
    
    # 둘 다 완성한 경우
    if toes_o and toes_x:
        return 0
    
    # 후공이 이긴 경우
    if toes_x:
        if o != x:
            return 0
        return 1
        
    # 그 외(선공이 이긴 경우)
    if toes_o:
        if o == x + 1:
            return 1
        return 0
    
    return 1
```

이건 gpt 풀이

```python
def solution(board):
    # 1. 말 개수
    o_cnt = sum(row.count('O') for row in board)
    x_cnt = sum(row.count('X') for row in board)
    if not (o_cnt == x_cnt or o_cnt == x_cnt + 1):
        return 0

    # 2. 모든 줄 모으기
    lines = []
    for i in range(3):
        lines.append(board[i])                              # 가로
        lines.append(''.join(board[r][i] for r in range(3))) # 세로
    lines.append(''.join(board[i][i]     for i in range(3)))  # ↘ 대각
    lines.append(''.join(board[i][2-i]   for i in range(3)))  # ↙ 대각

    o_win = any(line == "OOO" for line in lines)
    x_win = any(line == "XXX" for line in lines)

    # 3. 승패-개수 규칙
    if o_win and x_win:
        return 0
    if o_win and o_cnt != x_cnt + 1:
        return 0
    if x_win and o_cnt != x_cnt:
        return 0

    return 1
```