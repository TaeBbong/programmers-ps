# 기지국 설치

문제 정보 : 아이디어/코딩/lv3

N개의 아파트를 커버할 수 있게끔 기지국을 최소한으로 설치하라는 문제
N이 2억이므로, 웬만하면 N짜리 배열은 안만드는 방식을 생각했음.

조금 생각해보니 문제가 꽤 단순한게, 기지국은 직선상으로 커버를 하고,
따라서 커버 안되는 구간들도 선형적으로 생기기 마련
그러면 기지국 하나하나 확인해보면서 기지국이 커버하지 못하는 범위를 찾으면 되겠다
왜냐면? 커버 안되는 구간의 길이만으로 설치해야 하는 기지국 수를 알 수 있기 때문!

앞서 말했던 선형적이라는 특성과, 해당 구간에 설치한 기지국이 주변 다른 구간에 도움을 주지 못하기 때문에
(도움을 줄 수 있었다면, 이미 그 사이에 있는 기지국이 도움을 줬을 것)
무조건 해당 구간을 덮을 수 있는 최소 기지국 수가 산술적으로 나온다.
해당 구간에 설치해야 할 최소 기지국 수 = 올림(d / (w * 2 + 1))

따라서 1. 커버 안되는 빈 구간들을 찾는다, 2. 해당 구간의 길이를 (w * 2 + 1)로 나누고 올린 값을 answer에 더한다.

## 코드

import math

def solution(n, stations, w):
    answer = 0
    blanks = []
    filled = []
    
    s = 1 # 가장 오른쪽에 비어있는 칸
    for sta in stations:
        if s > n:
            break
        if sta - w > s: # 기지국 sta가 커버 못하는 구간 발생
            blanks.append((s, sta - w - 1))
            s = sta + w + 1
        else: # 기지국 sta가 커버 가능하므로, s를 옆으로 옮기기
            s = sta + w + 1
            
    if s <= n:
        blanks.append((s, n))
    
    for blank in blanks:
        distance = blank[1] - blank[0] + 1
        answer += math.ceil(distance / (w * 2 + 1))
        
    return answer


lv3 치고는 쉬웠던 문제
